C51 COMPILER V9.60.0.0   MAIN                                                              04/15/2021 21:02:27 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Mani\Keil\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\ma
                    -in.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "REGX51.H"
   2          
   3          // ranges for times:
   4          //////////////////////////////////////////////////////////////////////
   5          unsigned long int t_75_to_50_range[2] = {62260, 67040}; // 31.12ms to 33.52ms
   6          unsigned long int t_50_to_25_range[2] = {106760, 113840}; // 53.38ms to 56.92ms
   7          unsigned long int op_duration[4] = {4000000, 6000000, 8000000, 10000000}; // operations for dist b/w claps
   8          //                                  P1.4   |  P1.5  |  P1.6  |  P1.7
   9          //                                  2s     |  3s    |  4s    |  5s
  10          //////////////////////////////////////////////////////////////////////
  11          unsigned char timer0_overflows = 0;
  12          unsigned char timer1_overflows = 0;
  13          unsigned char num_clap = 0;
  14          bit reset_to_start = 0;
  15          
  16          // interrupt handlers
  17          void timer0_interrupt() interrupt 1{ // interrupt address = 000B, so number = (11-3)/8
  18   1        if(timer0_overflows == 0x01){
  19   2          // reset timer0_overflows, stop timer, not in a clap
  20   2          timer0_overflows = 0;
  21   2          TR0 = 0;
  22   2          TH0 = 0; TL0 = 0;
  23   2          reset_to_start = 1;
  24   2        }else{
  25   2          timer0_overflows++;
  26   2        }
  27   1      }
  28          void timer1_interrupt() interrupt 3{ // interrupt address = 001B, so number = (16+11-3)/8
  29   1        if(timer1_overflows == 0xB7){
  30   2          // reset timer1_overflows, stop timer, not in a clap pair
  31   2          timer1_overflows = 0;
  32   2          TR1 = 0;
  33   2          TH1 = 0; TL1 = 0;
  34   2          num_clap = 0;
  35   2        }else{
  36   2          timer1_overflows++;
  37   2        }
  38   1      }
  39          
  40          void delay(int num){
  41   1        // when num = 500, 1505021 machine cycles, 0.752 seconds
  42   1        int i,j;
  43   1        for (i=0; i<num; i++){
  44   2          for (j=0; j<500; j++){}
  45   2        }
  46   1      }
  47          
  48          void multi_clap_handler_func(unsigned long int clap_gap){
  49   1        if ((clap_gap >= (1 * 2000000)) && (clap_gap < op_duration[0])){
  50   2          P1_4 = 1;
  51   2          delay(500);
  52   2          P1_4 = 0;
  53   2        }else if ((clap_gap >= op_duration[0]) && (clap_gap < op_duration[1])){
  54   2          P1_5 = 1;
C51 COMPILER V9.60.0.0   MAIN                                                              04/15/2021 21:02:27 PAGE 2   

  55   2          delay(500);
  56   2          P1_5 = 0;
  57   2        }else if ((clap_gap >= op_duration[1]) && (clap_gap < op_duration[2])){
  58   2          P1_6 = 1;
  59   2          delay(500);
  60   2          P1_6 = 0;
  61   2        }else if ((clap_gap >= op_duration[2]) && (clap_gap < op_duration[3])){
  62   2          P1_7 = 1;
  63   2          delay(500);
  64   2          P1_7 = 0;
  65   2        }else{}
  66   1      }
  67          
  68          void main(){
  69   1        bit t_75_to_50_ok, t_50_to_25_ok;
  70   1        unsigned long int t_75_to_50, t_50_to_25;
  71   1        unsigned long int clap_gap = 0;
  72   1        // set up timers, interrupts
  73   1        TMOD = 0x11; // both timers in 16 bit mode
  74   1        IE = 0x8A; // enable timer0, timer1 interrupt
  75   1        P1 = 0x03; // switch off LEDs initially
  76   1        while(1){
  77   2          while(!P1_0){}
  78   2          // start timer0
  79   2          TR0 = 1;
  80   2          while(P1_0){
  81   3            // 75% - 50% pulse
  82   3            if(reset_to_start){
  83   4              continue;
  84   4            }
  85   3          }
  86   2          if(reset_to_start){reset_to_start = 0; continue;}
  87   2          // stop timer0
  88   2          TR0 = 0;
  89   2          // store value t_75_to_50
  90   2          t_75_to_50 = ((((unsigned long int) timer0_overflows) << 16) & 0x00FF0000);
  91   2          t_75_to_50 += ((((unsigned long int) TH0) << 8) & 0x0000FF00);
  92   2          t_75_to_50 += (((unsigned long int) TL0) & 0x000000FF);
  93   2          timer0_overflows = 0; TH0 = 0; TL0 = 0;
  94   2          if(!P1_1){continue;}
  95   2          // start timer0
  96   2          TR0 = 1;
  97   2          while(P1_1){
  98   3            // 50% - 25% pulse
  99   3            if(reset_to_start){
 100   4              continue;
 101   4            }
 102   3          }
 103   2          if(reset_to_start){reset_to_start = 0; continue;}
 104   2          // stop timer0
 105   2          TR0 = 0;
 106   2          // store value t_50_to_25
 107   2          t_50_to_25 = ((((unsigned long int) timer0_overflows) << 16) & 0x00FF0000);
 108   2          t_50_to_25 += ((((unsigned long int) TH0) << 8) & 0x0000FF00);
 109   2          t_50_to_25 += (((unsigned long int) TL0) & 0x000000FF);
 110   2          timer0_overflows = 0; TH0 = 0; TL0 = 0;
 111   2          
 112   2          // check if t_75_to_50, t_50_to_25 in range
 113   2          
 114   2          t_75_to_50_ok = ((t_75_to_50 >= t_75_to_50_range[0]) && (t_75_to_50 <= t_75_to_50_range[1]));
 115   2          t_50_to_25_ok = ((t_50_to_25 >= t_50_to_25_range[0]) && (t_50_to_25 <= t_50_to_25_range[1]));
 116   2          
C51 COMPILER V9.60.0.0   MAIN                                                              04/15/2021 21:02:27 PAGE 3   

 117   2          if (t_75_to_50_ok && t_50_to_25_ok){
 118   3            //clap detected
 119   3            // check num_clap,
 120   3            //    if 0 => num_clap++, start timer1, start over with P1_0
 121   3            //    if 1 => stop timer1, go_to multi_clap_handler_func; num_clap = 0;
 122   3            // send signal single clap detected
 123   3            P1_2 = 1;
 124   3            delay(500); // 0.752 seconds, 1505021 machine cycles
 125   3            P1_2 = 0;
 126   3            if(num_clap == 0){
 127   4              num_clap++;
 128   4              TR1 = 1;
 129   4            }else if(num_clap == 1){
 130   4              TR1 = 0;
 131   4              clap_gap = ((((unsigned long int) timer1_overflows) << 16) & 0x00FF0000);
 132   4              clap_gap += ((((unsigned long int) TH1) << 8) & 0x0000FF00);
 133   4              clap_gap += (((unsigned long int) TL1) & 0x000000FF);
 134   4              clap_gap -= (t_75_to_50 + t_50_to_25 + 1505021);
 135   4              multi_clap_handler_func(clap_gap);
 136   4              num_clap = 0;
 137   4              timer1_overflows = 0;
 138   4              TH1 = 0; TL1 = 0;
 139   4            }else{}
 140   3          }else{
 141   3            //clap not detected
 142   3            // go back to P1_0
 143   3          }
 144   2        }
 145   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    796    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     35      16
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
